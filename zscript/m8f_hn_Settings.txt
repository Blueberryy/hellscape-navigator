/* Copyright Alexander Kromm (mmaulwurff@gmail.com) 2018
 *
 * This file is part of Hellscape Navigator.
 *
 * Hellscape Navigator is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * Hellscape Navigator is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Hellscape Navigator.  If not, see <https://www.gnu.org/licenses/>.
 */

class m8f_hn_Settings
{
  enum FootstepMarkerTypes
  {
    MARKER_FOOTSTEP,
    MARKER_CIRCLE,
    MARKER_ARROW,
    MARKER_OFF,
  }

  double yStart;
  bool   showCompass;
  bool   levelName;
  bool   showGridCoords;
  bool   showOnAutomap;

  int    footstepPeriod; // tics
  int    markerType;     // FootstepMarkerTypes
  int    markerLifetime; // tics
  double markerAlpha;
  bool   markerForever;
  double markerScale;

  void read(PlayerInfo player)
  {
    yStart         = CVar.GetCVar("m8f_hn_compass_y"          , player).GetFloat();
    showCompass    = CVar.GetCVar("m8f_hn_compass_show"       , player).GetInt();
    levelName      = CVar.GetCVar("m8f_hn_compass_level_name" , player).GetInt();
    showGridCoords = CVar.GetCVar("m8f_hn_show_grid_coords"   , player).GetInt();
    showOnAutomap  = Cvar.GetCVar("m8f_hn_compass_automap"    , player).GetInt();

    footstepPeriod = CVar.GetCVar("m8f_hn_marker_spawn_period", player).GetInt();
    markerType     = CVar.GetCVar("m8f_hn_marker_type"        , player).GetInt();
    markerLifetime = CVar.GetCVar("m8f_hn_marker_lifetime" , player).GetInt() * 35;
    markerAlpha    = CVar.GetCVar("m8f_hn_marker_alpha"       , player).GetFloat();
    markerForever  = CVar.GetCVar("m8f_hn_marker_forever"     , player).GetInt();
    markerScale    = CVar.GetCVar("m8f_hn_marker_scale"       , player).GetFloat();
  }

  m8f_hn_Settings init(PlayerInfo player)
  {
    read(player);
    return self;
  }
}
